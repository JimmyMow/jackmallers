// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require turbolinks
//= require_tree .

$(document).ready(function() {
  $('.jumbotron').css({ height: ($(window).height()) +'px' });
  $('a[href="#"]').on('click', function(e) {
    e.preventDefault();
  });
  $('#bitcoinmom').on('click', function() {
    alert('Bitcoin mom is my step mom :)');
  });

  // var initialBg =  $('#jumbotron').css("background-image"); // added

  // var firstTime = true;
  // var mj = "url(<%= asset_path('mj-background.gif') %>)";
  // var kc = "url(<%= asset_path('kc-background.gif') %>)";
  // var ma = "url(<%= asset_path('ma-background.gif') %>)";
  // var state = "url(<%= asset_path('state-championship-bg.png') %>)";
  // var jabari = "url(<%= asset_path('me-jabari-bg.png') %>)";
  // var the_guys = "url(<%= asset_path('the-guys-bg.png') %>)";
  // var natioanls = "url(<%= asset_path('nationals-bg.png') %>)";

  // var arr = [initialBg, mj, kc, ma]; // changed
  // // var arr = [initialBg, mj, kc, ma, state, jabari, the_guys, natioanls]; // changed
  // console.log("arr:", arr);
  //   (function recurse(counter) {
  //       var bgImage = arr[counter];
  //       // var bgImage = arr[Math.floor(Math.random()*arr.length)];
  //       if (firstTime == false) {
  //           $("#jumbotron").fadeOut("slow", function(){
  //               $('#jumbotron').css('background-image', bgImage); // fixed
  //           });
  //           $("#jumbotron").fadeIn("slow");
  //       } else {
  //           firstTime = false;
  //       }
  //       delete arr[counter];
  //       arr.push(bgImage);
  //       setTimeout(function() {
  //           recurse(counter + 1);
  //       }, 4200);
  //   })(0);
});
